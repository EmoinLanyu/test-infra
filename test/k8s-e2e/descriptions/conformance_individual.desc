should support (root,0644,tmpfs) [NodeConformance] [Conformance]
should create a job from an image, then delete the job  [Conformance]
should contain environment variables for services [NodeConformance] [Conformance]
should create and stop a replication controller  [Conformance]
should provide container's cpu limit [NodeConformance] [Conformance]
should be updated [NodeConformance] [Conformance]
should create a pod from an image when restart is Never  [Conformance]
should be submitted and removed  [Conformance]
should provide podname only [NodeConformance] [Conformance]
should create services for rc  [Conformance]
should support subpaths with secret pod [Conformance]
should be consumable from pods in volume [NodeConformance] [Conformance]
should provide container's cpu request [NodeConformance] [Conformance]
should be consumable from pods in volume with defaultMode set [NodeConformance] [Conformance]
should support (non-root,0644,default) [NodeConformance] [Conformance]
should support subpaths with configmap pod [Conformance]
should be able to override the image's default command and arguments [NodeConformance] [Conformance]
should call prestop when killing a pod  [Conformance]
should set mode on item file [NodeConformance] [Conformance]
should be consumable from pods in volume with mappings and Item mode set [NodeConformance] [Conformance]
should support (non-root,0777,tmpfs) [NodeConformance] [Conformance]
should support --unix-socket=/path  [Conformance]
RecreateDeployment should delete old pods and create new ones [Conformance]
should set DefaultMode on files [NodeConformance] [Conformance]
should proxy logs on node using proxy subresource  [Conformance]
should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
should be sent by kubelets and the scheduler about pods scheduling and running  [Conformance]
should execute prestop exec hook properly [NodeConformance] [Conformance]
should support (non-root,0666,default) [NodeConformance] [Conformance]
validates that NodeSelector is respected if not matching  [Conformance]
should run and stop complex daemon [Conformance]
updates should be reflected in volume [NodeConformance] [Conformance]
should perform rolling updates and roll backs of template modifications [Conformance]
should perform canary updates and phased rolling updates of template modifications [Conformance]
should update labels on modification [NodeConformance] [Conformance]
should provide container's cpu limit [NodeConformance] [Conformance]
should function for intra-pod communication: http [NodeConformance] [Conformance]
should create an rc from an image  [Conformance]
should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
should serve multiport endpoints from pods  [Conformance]
should not be blocked by dependency circle [Conformance]
should serve a basic image on each replica with a public image  [Conformance]
should observe add, update, and delete watch notifications on configmaps [Conformance]
should check if kubectl describe prints relevant information for rc and pods  [Conformance]
should be able to retrieve and filter logs  [Conformance]
should be consumable from pods in volume with mappings and Item mode set [NodeConformance] [Conformance]
creating/deleting custom resource definition objects works  [Conformance]
should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
optional updates should be reflected in volume [NodeConformance] [Conformance]
volume on tmpfs should have the correct mode [NodeConformance] [Conformance]
should allow opting out of API token automount  [Conformance]
should rollback without unnecessary restarts [Conformance]
should ensure that all pods are removed when a namespace is deleted [Conformance]
should provide container's memory limit [NodeConformance] [Conformance]
should allow substituting values in a container's args [NodeConformance] [Conformance]
should support rolling-update to same image  [Conformance]
should create a deployment from an image  [Conformance]
validates resource limits of pods that are allowed to run  [Conformance]
should support subpaths with projected pod [Conformance]
should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
should set DefaultMode on files [NodeConformance] [Conformance]
should execute poststart exec hook properly [NodeConformance] [Conformance]
should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
should be consumable from pods in volume with defaultMode set [NodeConformance] [Conformance]
validates that NodeSelector is respected if matching  [Conformance]
should be consumable from pods in volume with defaultMode set [NodeConformance] [Conformance]
binary data should be reflected in volume [NodeConformance] [Conformance]
should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
should provide container's cpu request [NodeConformance] [Conformance]
should support (root,0777,tmpfs) [NodeConformance] [Conformance]
should allow substituting values in a container's command [NodeConformance] [Conformance]
should be consumable via the environment [NodeConformance] [Conformance]
should retry creating failed daemon pods [Conformance]
deployment should delete old replica sets [Conformance]
should be submitted and removed [NodeConformance] [Conformance]
should provide secure master service  [Conformance]
Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Conformance]
should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
should be consumable from pods in volume with defaultMode set [NodeConformance] [Conformance]
should proxy logs on node with explicit kubelet port using proxy subresource  [Conformance]
should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
should support (root,0666,tmpfs) [NodeConformance] [Conformance]
should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
should be consumable via environment variable [NodeConformance] [Conformance]
should create an rc or deployment from an image  [Conformance]
should get a host IP [NodeConformance] [Conformance]
should provide podname only [NodeConformance] [Conformance]
should provide DNS for services  [Conformance]
should update a single-container pod's image  [Conformance]
should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
should invoke init containers on a RestartAlways pod [Conformance]
deployment should support proportional scaling [Conformance]
should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
should serve a basic image on each replica with a public image  [Conformance]
should give a volume the correct mode [NodeConformance] [Conformance]
should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
should support (non-root,0644,tmpfs) [NodeConformance] [Conformance]
should delete RS created by deployment when not orphaning [Conformance]
volume on default medium should have the correct mode [NodeConformance] [Conformance]
should provide container's memory limit [NodeConformance] [Conformance]
should support proxy with --port 0  [Conformance]
should proxy through a service and a pod  [Conformance]
should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
should check if v1 is in available api versions  [Conformance]
should be consumable from pods in volume as non-root with defaultMode and fsGroup set [NodeConformance] [Conformance]
should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
should function for node-pod communication: udp [NodeConformance] [Conformance]
RollingUpdateDeployment should delete old pods and create new ones [Conformance]
should be able to override the image's default command (docker entrypoint) [NodeConformance] [Conformance]
should provide container's memory request [NodeConformance] [Conformance]
should delete pods created by rc when not orphaning [Conformance]
optional updates should be reflected in volume [NodeConformance] [Conformance]
should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
should be consumable from pods in volume [NodeConformance] [Conformance]
should support (non-root,0777,default) [NodeConformance] [Conformance]
with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
deployment should support rollover [Conformance]
should test kubelet managed /etc/hosts file [NodeConformance] [Conformance]
should have monotonically increasing restart count [Slow][NodeConformance] [Conformance]
should be consumable from pods in env vars [NodeConformance] [Conformance]
should be able to override the image's default arguments (docker cmd) [NodeConformance] [Conformance]
should create a job from an image when restart is OnFailure  [Conformance]
should allow composing env vars into new env vars [NodeConformance] [Conformance]
should be able to restart watching from the last resource version observed by the previous watch [Conformance]
should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
should create and stop a working application  [Conformance]
should support (root,0666,default) [NodeConformance] [Conformance]
should be consumable from pods in volume with mappings and Item Mode set [NodeConformance] [Conformance]
should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
should function for intra-pod communication: udp [NodeConformance] [Conformance]
should function for node-pod communication: http [NodeConformance] [Conformance]
should support (non-root,0666,tmpfs) [NodeConformance] [Conformance]
optional updates should be reflected in volume [NodeConformance] [Conformance]
should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
should be consumable via the environment [NodeConformance] [Conformance]
should check if Kubernetes master services is included in cluster-info  [Conformance]
should do a rolling update of a replication controller  [Conformance]
should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
should update annotations on modification [NodeConformance] [Conformance]
should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
should execute poststart http hook properly [NodeConformance] [Conformance]
should be consumable from pods in volume [NodeConformance] [Conformance]
should scale a replication controller  [Conformance]
should support subpaths with downward pod [Conformance]
should support (root,0644,default) [NodeConformance] [Conformance]
should provide DNS for the cluster  [Conformance]
should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
should be consumable from pods in volume [NodeConformance] [Conformance]
should provide host IP as an env var [NodeConformance] [Conformance]
should mount an API token into pods  [Conformance]
should be able to start watching from a specific resource version [Conformance]
should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
should provide container's memory request [NodeConformance] [Conformance]
should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
should update the label on a resource  [Conformance]
should update annotations on modification [NodeConformance] [Conformance]
Should recreate evicted statefulset [Conformance]
should invoke init containers on a RestartNever pod [Conformance]
should not be very high  [Conformance]
should execute prestop http hook properly [NodeConformance] [Conformance]
should check is all data is printed  [Conformance]
updates should be reflected in volume [NodeConformance] [Conformance]
Burst scaling should run to completion even with unhealthy pods [Conformance]
should orphan pods created by rc if delete options say so [Conformance]
optional updates should be reflected in volume [NodeConformance] [Conformance]
should add annotations for pods in rc  [Conformance]
should update labels on modification [NodeConformance] [Conformance]
should support subpaths with configmap pod with mountPath of existing file [Conformance]
should serve a basic endpoint from pods  [Conformance]
should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
should use the image defaults if command and args are blank [NodeConformance] [Conformance]
should ensure that all services are removed when a namespace is deleted [Conformance]
should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
should not start app containers if init containers fail on a RestartAlways pod [Conformance]
should support (root,0777,default) [NodeConformance] [Conformance]
should be consumable from pods in volume as non-root with defaultMode and fsGroup set [NodeConformance] [Conformance]
should be consumable from pods in volume with mappings and Item Mode set [NodeConformance] [Conformance]
should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
should run and stop simple daemon [Conformance]
should provide pod UID as env vars [NodeConformance] [Conformance]
should set mode on item file [NodeConformance] [Conformance]