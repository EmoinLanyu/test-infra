#!/usr/bin/env bash
#
# Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
set -e

export GO111MODULE=on

if [[ -z "${SOURCE_PATH}" ]]; then
  export SOURCE_PATH="$(readlink -f "$(dirname ${0})/..")"
else
  export SOURCE_PATH="$(readlink -f "${SOURCE_PATH}")"
fi

cd "${SOURCE_PATH}"

# Install Golint
if ! which golint 1>/dev/null; then
  echo -n "Installing golint... "
  # Build Golint.
  go install -mod=vendor ./vendor/golang.org/x/lint/golint
  echo "done."
fi

PACKAGES=("pkg" "cmd" "test")

# Execute static code checks.
echo "Running go vet..."
for pkg in ${PACKAGES}; do
  go vet -mod=vendor ./${pkg}/...
done
echo "go vet successful"

# Execute automatic code formatting directive.
echo "Running gofmt..."
for pkg in ${PACKAGES}; do
  go fmt ./${pkg}/...
done
echo "go fmt successful"

# Execute lint checks.
echo "Running golint..."
for dir in ${PACKAGES}; do
  golint -set_exit_status $(find $dir -maxdepth 1 -name "*.go" | grep -vE 'zz_generated|_test.go')
done
echo "golint successfull"
